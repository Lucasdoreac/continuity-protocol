#!/bin/bash
# MCP GUARD - Integra√ß√£o autom√°tica do monitor com a√ß√µes MCP

CONTINUITY_DIR="/Users/lucascardoso/apps/MCP/CONTINUITY"
MONITOR="$CONTINUITY_DIR/mcp-self-monitor.sh"

# Inicializar monitor
if [[ ! -f "$CONTINUITY_DIR/mcp-monitor/.monitor_active" ]]; then
    "$MONITOR" start
    touch "$CONTINUITY_DIR/mcp-monitor/.monitor_active"
fi

auto_monitor() {
    local action="$1" data="$2" source="${3:-user}"
    
    "$MONITOR" monitor "$action" "$data" "$source"
    
    if [[ -f "$CONTINUITY_DIR/mcp-monitor/CRITICAL_ALERT.txt" ]]; then
        echo "üö®üö®üö® ALERTA CR√çTICO MCP üö®üö®üö®"
        cat "$CONTINUITY_DIR/mcp-monitor/CRITICAL_ALERT.txt"
        echo "üõ°Ô∏è REVISAR: √∫ltimas a√ß√µes, fontes externas, autoriza√ß√µes"
        return 1
    fi
    return 0
}

pre_mcp_check() {
    local action="$1" target="$2" context="$3"
    echo "üõ°Ô∏è Verificando: $action"
    
    auto_monitor "PRE_CHECK" "$action -> $target" "$context"
    
    if [[ $? -ne 0 ]]; then
        echo "‚ùå A√ß√£o bloqueada"
        return 1
    fi
    
    echo "‚úÖ A√ß√£o autorizada"
    return 0
}

guard_status() {
    echo "üõ°Ô∏è MCP GUARD STATUS:"
    "$MONITOR" status
    [[ -f "$CONTINUITY_DIR/mcp-monitor/CRITICAL_ALERT.txt" ]] && echo "üö® ALERTA ATIVO" && cat "$CONTINUITY_DIR/mcp-monitor/CRITICAL_ALERT.txt"
}

case "$1" in
    monitor) auto_monitor "$2" "$3" "$4" ;;
    check) pre_mcp_check "$2" "$3" "$4" ;;
    status) guard_status ;;
    reset) 
        rm -f "$CONTINUITY_DIR/mcp-monitor/CRITICAL_ALERT.txt" "$CONTINUITY_DIR/mcp-monitor/.monitor_active"
        echo "üîÑ Monitor resetado"
        ;;
    *) 
        echo "USO: $0 {monitor|check|status|reset}"
        echo "EXEMPLOS:"
        echo "  $0 check read_file repo/file.js 'source context'"
        echo "  $0 monitor create_pull_request user/repo 'PR content'"
        echo "  $0 status"
        ;;
esac
