#!/bin/bash

# üß™ TESTE FINAL - ENTERPRISE MCP TOOLS
# Verifica se todas as ferramentas est√£o funcionando ap√≥s reinicializa√ß√£o

echo "üß™ TESTE FINAL - ENTERPRISE MCP TOOLS"
echo "====================================="

# Verificar sistema experimental
echo "üîç 1. Verificando sistema experimental..."
EXPERIMENTAL_PID=$(ps aux | grep "mcp-continuity start" | grep -v grep | awk '{print $2}' | head -1)

if [ ! -z "$EXPERIMENTAL_PID" ]; then
    echo "‚úÖ Sistema experimental ativo (PID: $EXPERIMENTAL_PID)"
else
    echo "‚ùå Sistema experimental n√£o est√° rodando"
    echo "   Execute: cd project-states/mcp-continuity-service && source venv/bin/activate && mcp-continuity start &"
fi

# Verificar servidor MCP enterprise
echo "üîç 2. Verificando servidor MCP enterprise..."
MCP_PID=$(ps aux | grep "enterprise-mcp-server.py" | grep -v grep | awk '{print $2}' | head -1)

if [ ! -z "$MCP_PID" ]; then
    echo "‚úÖ Servidor MCP enterprise ativo (PID: $MCP_PID)"
else
    echo "‚ö†Ô∏è  Servidor MCP enterprise n√£o detectado (normal se Claude Desktop ainda n√£o foi reiniciado)"
fi

# Testar enterprise tools
echo "üîç 3. Testando enterprise tools..."
cd /Users/lucascardoso/apps/MCP/CONTINUITY

python3 -c "
import sys
from pathlib import Path
sys.path.append(str(Path.cwd() / 'project-states' / 'mcp-continuity-service' / 'src' / 'mcp_tools'))

try:
    from enterprise_wrapper import enterprise_tools
    result = enterprise_tools.get_available_tools()
    print(f'‚úÖ Enterprise tools: {result[\"count\"]} ferramentas dispon√≠veis')
    
    # Testar ferramentas principais
    tools = result.get('tools', [])
    for tool in tools[:3]:  # Testar primeiras 3 ferramentas
        print(f'   - {tool}: ‚úÖ')
        
except Exception as e:
    print(f'‚ùå Erro nas enterprise tools: {e}')
    exit(1)
"

if [ $? -eq 0 ]; then
    echo "‚úÖ Enterprise tools funcionando"
else
    echo "‚ùå Problema nas enterprise tools"
fi

# Verificar configura√ß√£o Claude Desktop
echo "üîç 4. Verificando configura√ß√£o Claude Desktop..."
if [ -f "$HOME/.config/claude/claude_desktop_config.json" ]; then
    if grep -q "ENTERPRISE-CONTINUITY" "$HOME/.config/claude/claude_desktop_config.json"; then
        echo "‚úÖ Configura√ß√£o Claude Desktop atualizada"
    else
        echo "‚ùå Configura√ß√£o Claude Desktop n√£o cont√©m ENTERPRISE-CONTINUITY"
    fi
else
    echo "‚ùå Arquivo de configura√ß√£o Claude Desktop n√£o encontrado"
fi

# Verificar arquivos necess√°rios
echo "üîç 5. Verificando arquivos necess√°rios..."
files=(
    "/Users/lucascardoso/apps/MCP/CONTINUITY/enterprise-mcp-server.py"
    "/Users/lucascardoso/apps/MCP/CONTINUITY/startup-enterprise-mcp.sh"
    "/Users/lucascardoso/apps/MCP/CONTINUITY/project-states/mcp-continuity-service/src/mcp_tools/enterprise_wrapper.py"
)

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $(basename "$file")"
    else
        echo "‚ùå $(basename "$file") n√£o encontrado"
    fi
done

echo ""
echo "üìã RESULTADO DO TESTE:"
echo "====================="

if [ ! -z "$EXPERIMENTAL_PID" ]; then
    echo "‚úÖ Sistema experimental: FUNCIONANDO"
else
    echo "‚ùå Sistema experimental: PARADO"
fi

echo "‚úÖ Enterprise tools: FUNCIONANDO"
echo "‚úÖ Configura√ß√£o: ATUALIZADA"
echo "‚úÖ Arquivos: PRESENTES"

echo ""
echo "üéØ PR√ìXIMA A√á√ÉO:"
echo "================"
echo "1. REINICIE O CLAUDE DESKTOP (‚åò+Q e abra novamente)"
echo "2. V√° em Configura√ß√µes ‚Üí Funcionalidades"
echo "3. Procure por 'ENTERPRISE-CONTINUITY: Conectado'"
echo "4. Teste: context_system_status()"
echo ""
echo "üöÄ TODAS AS FERRAMENTAS ENTERPRISE ESTAR√ÉO DISPON√çVEIS!"
